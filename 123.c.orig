/**
		实现串口发送数据控制电机正加角度和减角度
		1602配合显示
**/
#include "123.h"

sbit E=P2^7;		//1602使能引脚
sbit RW=P2^6;		//1602读写引脚	
sbit RS=P2^5;		//1602数据/命令选择引脚
sbit led = P3^6;
sbit led1 = P3^7;
bit flag;
bit flag1;
bit flag_lcd_fx;

void main()
{
	uchar i,a;
//	uint k ,b;
	L1602_init();
	Delay(100);
	UartInit();
	P2 = 0x00;
	while(1)
	{
//		
//		switch(flag)
//		{
//			case'0':
//				key_add();
//			break;
//			case'1':
//				key_less();
//			break;
//		}
		if(flag == 0)		
		{
			led = 0;
//		L1602_init();
			L1602_string(1,1,"Mo Dir: Goto");
			L1602_string(2,1,"Mo Spd: ");
//			for(i=0;i<9;i++)
//				{
//					P1 = F_Rotation[i];
//					Delay(1);
//				}
			key_add(uint speed);
		}
		
		
		if(flag == 1)
		{
			led = 1;
//		L1602_init();
			L1602_string(1,1,"Mo Dir: Back");
			L1602_string(2,1,"Mo Spd: ");
//			for(a=0;a<9;a++)
//				{
//					P1 = B_Rotation[a];
//					Delay(1);
//				}
			key_less();
		}
		
		if(flag1 == 0)
		{
			
		}
	}
}



/**
		开启串口定时器，且设置波特率为9600
**/
void UartInit()		//9600bps@11.0592MHz
{
SCON= 0x50; // SCON: 模式1, 8-bit UART, 使能接收
TMOD|= 0x20;
TH1=0xfd; //波特率9600 初值
TL1=0xfd;
TR1=1;
EA=1; //打开总中断
ES=1; //打开串口中断
}


void Delay(uint i) 
{
	uchar x,j;
	for(j=0;j<i;j++)
	for(x=0;x<=148;x++);	
}

/********************************************************************
* 名称 : Delay()
* 功能 : 延时,延时时间大概为1毫秒
* 输入 : 无
* 输出 : 无
***********************************************************************/
void Delay_1ms(uint i)
{
	uint x,j;
	for(j=0;j<i;j++)
	for(x=0;x<=148;x++);	
}


/********************************************************************
* 名称 : delay()
* 功能 : 延时,延时时间大概为140US。
* 输入 : 无
* 输出 : 无
***********************************************************************/

void Delay2()
{
	int i,j;
	for(i=0; i<=10; i++)
	for(j=0; j<=2; j++)
	;
}

/*******************************************************************************
* 函 数 名         : delay
* 函数功能		   : 延时函数，i=1时，大约延时10us
*******************************************************************************/
void delay1(uchar i)
{
	while(i--);	
}

/* 名称 : delay()
* 功能 : 延时,延时时间大概为5US。
* 输入 : 无
* 输出 : 无
***********************************************************************/

void delay3()
{
	_nop_();
	_nop_();
	_nop_();
	_nop_();
	_nop_();
}

/********************************************************************
* 名称 : bit Busy(void)
* 功能 : 这个是一个读状态函数，读出函数是否处在忙状态
* 输入 : 输入的命令值
* 输出 : 无
***********************************************************************/
bit Busy(void)
{
	bit busy_flag = 0;
	RS = 0;
	RW = 1;
	E = 1;
	delay3();
	busy_flag = (bit)(P0 & 0x80);
	E = 0;
	return busy_flag;
}
/********************************************************************
* 名称 : wcmd(uchar del)
* 功能 : 1602命令函数
* 输入 : 输入的命令值
* 输出 : 无
***********************************************************************/
void wcmd(uchar del)
{
	while(Busy());
	RS = 0;
	RW = 0;
	E = 0;
	delay3();
	P0 = del;
	delay3();
	E = 1;
	delay3();
	E = 0;
}

/********************************************************************
* 名称 : wdata(uchar del)
* 功能 : 1602写数据函数
* 输入 : 需要写入1602的数据
* 输出 : 无
***********************************************************************/

void wdata(uchar del)
{
	while(Busy());
	RS = 1;
	RW = 0;
	E = 0;
	delay3();
	P0 = del;
  delay3();
	E = 1;
	delay3();
	E = 0;
}

/********************************************************************
* 名称 : L1602_init()
* 功能 : 1602初始化，请参考1602的资料
* 输入 : 无
* 输出 : 无
***********************************************************************/
void L1602_init(void)
{
	wcmd(0x38);
	Delay(5);
	wcmd(0x38);
	Delay(5);
	wcmd(0x38);
	Delay(5);
	wcmd(0x38);
	wcmd(0x08);	
	wcmd(0x0c);
	wcmd(0x04);
	wcmd(0x01);
}

/********************************************************************
* 名称 : L1602_char(uchar hang,uchar lie,char sign)
* 功能 : 改变液晶中某位的值，如果要让第一行，第五个字符显示"b" ，调用该函数如下
		 L1602_char(1,5,'b')
* 输入 : 行，列，需要输入1602的数据
* 输出 : 无
***********************************************************************/
void L1602_char(uchar hang,uchar lie,char sign)
{
	uchar a;
	if(hang == 1) a = 0x80;
	if(hang == 2) a = 0xc0;
	a = a + lie - 1;
	wcmd(a);
	wdata(sign);
}

/********************************************************************
* 名称 : L1602_string(uchar hang,uchar lie,uchar *p)
* 功能 : 改变液晶中某位的值，如果要让第一行，第五个字符开始显示"ab cd ef" ，调用该函数如下
	 	 L1602_string(1,5,"ab cd ef;")
* 输入 : 行，列，需要输入1602的数据
* 输出 : 无
***********************************************************************/
void L1602_string(uchar hang,uchar lie,uchar *p)
{
	uchar a,b=0;
	if(hang == 1) a = 0x80;
	if(hang == 2) a = 0xc0;
	a = a + lie - 1;
	while(1)
	{
		wcmd(a++);			
		if((*p == '\0')||(b==16)) break;
		b++;
		wdata(*p);
		p++;
	}
}



void key_add(uint speed)		//按键控制角度增加
{
		uchar i; 
//	uint k = 0;
//	for(k=0;k<64;k++)
//	{
		for(i=0;i<9;i++)
		{
			P1 = F_Rotation[i];		//顺时针转动
			Delay(speed);					//改变转速
		}
		return speed;
//	}
}


void key_less(uint speed)		//按键控制角度减少
{			
		uchar i; 
//	uint k = 0;
//	for(k=0;k<64;k++)
//			{
				for(i=0;i<9;i++)
				{
					P1 = B_Rotation[i];	 //逆时针转动
					Delay(1);							//改变转速
				}
				retuen speed;
//			}
}


void Usart() interrupt 4
{
	uchar n; //定义临时变量
//	led = 1;
	if(RI) //判断是接收中断产生
		{
			RI=0; //标志位清零
			n=SBUF;//读入缓冲区的值
			switch(n)
			{
				case'0':
					flag = 0;
//					led = 1;
				break;
				case'1':
					flag = 1;
//					led = 1;
				break;
				case'3':
						flag1 = 0;
				break;
			}
			TI=1;
			SBUF=n;//把接收到的值再发回
		}
	if(TI) //如果是发送标志位，清零
		TI=0;
}